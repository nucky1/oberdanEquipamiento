/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import DAO.DireccionesDAO;
import DAO.ProveedoresDAO;
import Models.Proveedor;
import Models.Contacto;
import Statics.Funciones;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author demig
 */
public class ProveedoresView extends javax.swing.JPanel {
    private ProveedoresDAO proveedoresDAO; 
    private DireccionesDAO direccionesDAO;
    private Proveedor proveedor_selected;
    private boolean modificarTrue = false;
    List<Proveedor> lista_proveedores;
    /**
     * Creates new form ProveedoresView
     */
    public ProveedoresView() {
        initComponents();
        proveedoresDAO = ProveedoresDAO.getInstance();
        direccionesDAO = DireccionesDAO.getInstance();
        direccionesDAO.getDirecciones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogAñadirElemento = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        txtf_nuevo_elemento = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();

        txtf_nuevo_elemento.setText("Ingrese nuevo");
        txtf_nuevo_elemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtf_nuevo_elementoActionPerformed(evt);
            }
        });

        jLabel38.setText("Nuevo:");

        jButton12.setText("OK");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Cancelar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(txtf_nuevo_elemento, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(txtf_nuevo_elemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton13))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout jDialogAñadirElementoLayout = new javax.swing.GroupLayout(jDialogAñadirElemento.getContentPane());
        jDialogAñadirElemento.getContentPane().setLayout(jDialogAñadirElementoLayout);
        jDialogAñadirElementoLayout.setHorizontalGroup(
            jDialogAñadirElementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogAñadirElementoLayout.setVerticalGroup(
            jDialogAñadirElementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1263, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 699, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    private void txtf_nuevo_elementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtf_nuevo_elementoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtf_nuevo_elementoActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        String texto = txtf_nuevo_elemento.getText().toLowerCase();
        switch(jDialogAñadirElemento.getTitle()){
            case "Añadir una nueva nacionalidad":{
                direccionesDAO.añadirNacionalidad(texto);
                cbox_nacionalidad.addItem(texto);
                cbox_nacionalidad.setSelectedItem(texto);
                break;
            }
            case "Añadir una nueva provincia":{
                direccionesDAO.añadirProvincia(texto);
                cbox_provincia.addItem(texto);
                cbox_provincia.setSelectedItem(texto);
                break;
            }
            case "Añadir una nueva ciudad":{
                direccionesDAO.añadirCiudad(texto);
                cbox_ciudad.addItem(texto);
                cbox_ciudad.setSelectedItem(texto);
                break;
            }
            case "Añadir un nuevo barrio":{
                direccionesDAO.añadirBarrio(texto);
                cbox_barrio.addItem(texto);
                cbox_barrio.setSelectedItem(texto);
                break;
            }
            case "Añadir una nueva direccion":{
                direccionesDAO.añadirDireccion(texto);
                cbox_direccion.addItem(texto);
                cbox_direccion.setSelectedItem(texto);
                break;
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JDialog jDialogAñadirElemento;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JTextField txtf_nuevo_elemento;
    // End of variables declaration//GEN-END:variables

    //panel buscador
    public void cambioBusqueda(String txt,boolean codigo, boolean nombre, JTextField buscador, JTable tablaBuscador){
            
        if(txt.isEmpty()){
            cargarTablaBusqueda(proveedoresDAO.buscarProveedor("nombre",""),tablaBuscador);
        }else if(codigo){
            try{
                int cod = Integer.parseInt(txt);
                cargarTablaBusqueda(proveedoresDAO.buscarProveedor(cod),tablaBuscador);
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null,"Debe ingresar un código", 
                    "Error",  JOptionPane.ERROR_MESSAGE);
                buscador.setText("");
            }
        }else if(nombre){
            cargarTablaBusqueda(proveedoresDAO.buscarProveedor("nombre", txt.toLowerCase()),tablaBuscador);
        }else{
            System.out.println("Error no selecciono tipo de busqueda");
        }
    }
    public void cargarTablaBusqueda(List<Proveedor> prov, JTable tablaBuscador){
        lista_proveedores = new ArrayList<>(prov);
        DefaultTableModel model = (DefaultTableModel) tablaBuscador.getModel();
        model.setNumRows(0);
         try {
            Object[] obj = new Object[2];
            for (int i = 0; i < lista_proveedores.size(); i++) {
                obj[0] = lista_proveedores.get(i).getId();
                obj[1] = lista_proveedores.get(i).getNombre();
                model.addRow(obj);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    public void cargarDatosProveedor(int pos){
        if (pos != -1) {
            proveedor_selected = lista_proveedores.get(pos);
            txtf_nombre_empresa.setText(proveedor_selected.getNombre());
            txtf_observaciones.setText(proveedor_selected.getObservaciones());
            txtf_cbu.setText(proveedor_selected.getCbu());
            txtf_cuit.setText(proveedor_selected.getCuit());
            cbox_barrio.removeAllItems();
            cbox_barrio.addItem(proveedor_selected.getIva());
            //contacto
            txtf_contacto.setText("");
            //direccion
            txtf_codigoPostal.setText(proveedor_selected.getCodigoPostal());
            txtf_nro.setText(proveedor_selected.getNro());
        }
    }
    //limpiadores pestaña 1
    private void limpiarCampos(){
        txtf_cbu.setText("");
        txtf_nombre_empresa.setText("");
        txtf_codigoPostal.setText("");
        txtf_cuit.setText("");
        txtf_nro.setText("");
        txtf_observaciones.setText("");
        txtf_contacto.setText("");
        txtf_referencia.setText("");
        DefaultTableModel model = (DefaultTableModel) tabla_contactos.getModel();
        model.setNumRows(0);
        String[] items = {"Responsable Inscripto","Monotributo","No Responsable","Exento","Consumidor Final"};
        cbox_iva = new JComboBox<>(items);
        cbox_iva.setSelectedIndex(0);
        cbox_tipoContacto.setSelectedIndex(0);
        cbox_barrio.removeAllItems();
        cbox_barrio.addItem("-");
        cbox_barrio.setSelectedIndex(0);
        cbox_ciudad.removeAllItems();
        cbox_ciudad.addItem("-");
        cbox_ciudad.setSelectedIndex(0);
        cbox_direccion.removeAllItems();
        cbox_direccion.addItem("-");
        cbox_direccion.setSelectedIndex(0);
        cbox_nacionalidad.removeAllItems();
        cbox_nacionalidad.addItem("-");
        cbox_nacionalidad.setSelectedIndex(0);
        cbox_provincia.removeAllItems();
        cbox_provincia.addItem("-");
        cbox_provincia.setSelectedIndex(0);
        
        
    }
    private void habilitarCampos(boolean flag){
        txtf_cbu.setEnabled(flag);
        txtf_nombre_empresa.setEnabled(flag);
        txtf_codigoPostal.setEnabled(flag);
        txtf_cuit.setEnabled(flag);
        txtf_nro.setEnabled(flag);
        txtf_observaciones.setEnabled(flag);
        txtf_contacto.setEnabled(flag);
        txtf_referencia.setEnabled(flag);
        cbox_barrio.setEnabled(flag);
        cbox_ciudad.setEnabled(flag);
        cbox_direccion.setEnabled(flag);
        cbox_nacionalidad.setEnabled(flag);
        cbox_provincia.setEnabled(flag);
        btn_agregarBarrio.setEnabled(flag);
        btn_agregarCiudad.setEnabled(flag);
        btn_agregarContacto.setEnabled(flag);
        btn_agregarDireccion.setEnabled(flag);
        btn_agregarNacionalidad.setEnabled(flag);
        btn_agregarProvincia.setEnabled(flag);
        btn_proveedores_cancelar.setVisible(flag);
        btn_proveedores_guardar.setVisible(flag);
        btn_proveedores_modificar.setEnabled(!flag);
        btn_proveedores_nuevo.setEnabled(!flag);
        //--panel buscar
        btn_proveedores_imprimirTodo.setEnabled(!flag);
        btn_proveedores_eliminar.setEnabled(!flag);
        txtf_proveedor_buscar.setEnabled(!flag);
        rbtn_proveedores_codigo.setEnabled(!flag);
        rbtn_proveedores_nombre.setEnabled(!flag);
        tabla_proveedores_busqueda.setEnabled(!flag);
    }

    private void cargarNacionalidades() {
        
    }
}
