/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import DAO.ClientesDAO;
import DAO.DireccionesDAO;
import DAO.EmpleadosDAO;
import Models.Barrio;
import Models.Contacto;
import Models.Direccion;
import Models.Empleado;
import Models.Localidad;
import Models.Mapa;
import Models.Pais;
import Models.Provincia;
import Statics.Funciones;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hernan
 */
public class AltaUsuariosView extends javax.swing.JPanel {
    private DireccionesDAO direccionesDAO;
    private EmpleadosDAO empleadosDAO;
    private Empleado empleadoSelected;
    private Pais Pais_selected;
    private Provincia Provincia_selected;
    private Localidad Localidad_selected;
    private Barrio Barrio_selected;
    private Direccion direccion_selected;
    private List<Empleado> listaEmpleados;
    private boolean modificarTrue = false;
    private boolean altaUsuarioOk = false;
    private Mapa direcciones = null;
    private Empleado empleadoLogueado;
    /**
     * Creates new form ABMUsuariosView
     */
    public AltaUsuariosView() {
        
        initComponents();
        Statics.style.setPlaceHolder(jTextF_IngresarNuevoElemento, "Ingrese nuevo");
        habilitarCampos(false);
        jComboBox_Provincias.setEnabled(false);
        jComboBox_Ciudades.setEnabled(false);
        jComboBox_Barrios.setEnabled(false);
        jComboBox_calles.setEnabled(false);
        empleadosDAO = empleadosDAO.getInstance();
        direccionesDAO = direccionesDAO.getInstance();
        direcciones =direccionesDAO.getMapa();
        jComboBox_estadoCivil.setSelectedIndex(0);
        jComboBox_tipoDni.setSelectedIndex(0);
        jButtonEliminarEmpleado.setEnabled(false);
        jButtonCrearNuevo.setEnabled(false);
        jButtonModificar.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogAñadirElemento = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        jTextF_IngresarNuevoElemento = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jButtonOKjdialog = new javax.swing.JButton();
        jButtonCancelarJdialog = new javax.swing.JButton();
        jDialogGenerarUser = new javax.swing.JDialog();
        jPanelGenerarUser = new javax.swing.JPanel();
        jTextFieldUsuario = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jButtonOKjdialogUser = new javax.swing.JButton();
        jButtonCancelarJdialogUser = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPasswordFieldCrear1 = new javax.swing.JPasswordField();
        jPasswordFieldCrear2 = new javax.swing.JPasswordField();
        jLabelAdvertencia = new javax.swing.JLabel();
        jDialogModificarUser = new javax.swing.JDialog();
        jPanelGenerarUser1 = new javax.swing.JPanel();
        jTextFieldUsuario1 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jButtonOKjdialogUser1 = new javax.swing.JButton();
        jButtonCancelarJdialogUser1 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPasswordFieldActual = new javax.swing.JPasswordField();
        jPasswordFieldNueva2 = new javax.swing.JPasswordField();
        jLabel24 = new javax.swing.JLabel();
        jPasswordFieldNueva1 = new javax.swing.JPasswordField();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tablaBuscador = new javax.swing.JTable();
        jTexfieldBuscador = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jButtonCrearNuevo = new javax.swing.JButton();
        jButtonEliminarEmpleado = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextField_ReferenciaCalles = new javax.swing.JTextField();
        jComboBox_TipoContacto = new javax.swing.JComboBox<>();
        jTextFieldContacto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButtonCrearUser = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jTextField_CodigoPostal = new javax.swing.JTextField();
        jTextField_nombreApellido = new javax.swing.JTextField();
        jTextField_dni = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jCombo_Naciones1 = new javax.swing.JComboBox<>();
        jButtonModificar = new javax.swing.JButton();
        jButtonGuardarMain = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox_Provincias = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jComboBox_Ciudades = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jComboBox_Barrios = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_tipoDni = new javax.swing.JComboBox<>();
        jButtonAñadirNacion = new javax.swing.JButton();
        jButtonAñadirProvincia = new javax.swing.JButton();
        jButtonAñadirCiudad = new javax.swing.JButton();
        jButtonAñadirBarrio = new javax.swing.JButton();
        jButtonAñadirContacto = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jComboBox_calles = new javax.swing.JComboBox<>();
        jButtonAñadirCalle = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_tipoYcontacto = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton_eliminarContacto = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTextField_nroCasa = new javax.swing.JTextField();
        jTextField_cuil = new javax.swing.JTextField();
        jTextFieldCategoria = new javax.swing.JTextField();
        jTextFieldConvenio = new javax.swing.JTextField();
        jTextFieldAporteOSocial = new javax.swing.JTextField();
        jDateChooserFN = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jButtonCancelarMain = new javax.swing.JButton();
        jComboBox_estadoCivil = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jTextFieldTipo = new javax.swing.JTextField();

        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextF_IngresarNuevoElemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextF_IngresarNuevoElementoActionPerformed(evt);
            }
        });
        jPanel14.add(jTextF_IngresarNuevoElemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 21, 233, -1));

        jLabel38.setText("Nuevo:");
        jPanel14.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 24, -1, -1));

        jButtonOKjdialog.setText("OK");
        jButtonOKjdialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKjdialogActionPerformed(evt);
            }
        });
        jPanel14.add(jButtonOKjdialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 77, 70, -1));

        jButtonCancelarJdialog.setText("Cancelar");
        jButtonCancelarJdialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarJdialogActionPerformed(evt);
            }
        });
        jPanel14.add(jButtonCancelarJdialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 77, -1, -1));

        javax.swing.GroupLayout jDialogAñadirElementoLayout = new javax.swing.GroupLayout(jDialogAñadirElemento.getContentPane());
        jDialogAñadirElemento.getContentPane().setLayout(jDialogAñadirElementoLayout);
        jDialogAñadirElementoLayout.setHorizontalGroup(
            jDialogAñadirElementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogAñadirElementoLayout.setVerticalGroup(
            jDialogAñadirElementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jDialogGenerarUser.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialogGenerarUser.setMinimumSize(new java.awt.Dimension(520, 480));
        jDialogGenerarUser.setResizable(false);
        jDialogGenerarUser.setSize(new java.awt.Dimension(520, 480));

        jPanelGenerarUser.setMinimumSize(new java.awt.Dimension(520, 480));
        jPanelGenerarUser.setPreferredSize(new java.awt.Dimension(520, 480));
        jPanelGenerarUser.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsuarioActionPerformed(evt);
            }
        });
        jPanelGenerarUser.add(jTextFieldUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 233, -1));

        jLabel39.setText("Usuario");
        jPanelGenerarUser.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jButtonOKjdialogUser.setText("OK");
        jButtonOKjdialogUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKjdialogUserActionPerformed(evt);
            }
        });
        jPanelGenerarUser.add(jButtonOKjdialogUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 390, 70, 30));

        jButtonCancelarJdialogUser.setText("Cancelar");
        jButtonCancelarJdialogUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarJdialogUserActionPerformed(evt);
            }
        });
        jPanelGenerarUser.add(jButtonCancelarJdialogUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 390, -1, 30));

        jLabel6.setText("Ingrese la contraseña:");
        jPanelGenerarUser.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel19.setText("Repita la contraseña");
        jPanelGenerarUser.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jLabel20.setText("<html>GUARDE SU CONTRASEÑA Y USUARIO DONDE NO LO OLVIDE NI DONDE SEA ACCSESIBLE A NADIE. <br> SOLO UD. PUEDE ACCEDER A ELLA Y NO HAY MANERA DE RECUPERARLA EN CASO DE PERDIDA.<br>  LA EMPRESA NO SE RESPONSABILIZA POR LA PERDIDA DE ESTA.<br> AL GENERAR ESTE USUARIO, UD ENTIENDE QUE SE SOLICITARA EN LUGAR DE SU FIRMA Y POR ENDE,<br> TIENE EL VALOR DE  SU CONSENTIMIENTO PARA EL ALCANCE DE ESTE SISTEMA Y<br> SERA UTILIZADO PARA REGISTRAR SU APROBACION EN CADA PROCESO EN QUE<br> SE REQUIERA GUARDAR LA CONSTANCIA DE SU  CONTROL/AUTORIZACION </html>");
        jPanelGenerarUser.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 470, 170));

        jPasswordFieldCrear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldCrear1ActionPerformed(evt);
            }
        });
        jPanelGenerarUser.add(jPasswordFieldCrear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 230, -1));
        jPanelGenerarUser.add(jPasswordFieldCrear2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 230, -1));

        jLabelAdvertencia.setForeground(new java.awt.Color(153, 0, 51));
        jLabelAdvertencia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanelGenerarUser.add(jLabelAdvertencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 440, 30));

        javax.swing.GroupLayout jDialogGenerarUserLayout = new javax.swing.GroupLayout(jDialogGenerarUser.getContentPane());
        jDialogGenerarUser.getContentPane().setLayout(jDialogGenerarUserLayout);
        jDialogGenerarUserLayout.setHorizontalGroup(
            jDialogGenerarUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogGenerarUserLayout.createSequentialGroup()
                .addComponent(jPanelGenerarUser, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDialogGenerarUserLayout.setVerticalGroup(
            jDialogGenerarUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelGenerarUser, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jDialogModificarUser.setMinimumSize(new java.awt.Dimension(520, 480));
        jDialogModificarUser.setResizable(false);
        jDialogModificarUser.setSize(new java.awt.Dimension(520, 480));

        jPanelGenerarUser1.setMinimumSize(new java.awt.Dimension(520, 480));
        jPanelGenerarUser1.setPreferredSize(new java.awt.Dimension(520, 480));
        jPanelGenerarUser1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldUsuario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsuario1ActionPerformed(evt);
            }
        });
        jPanelGenerarUser1.add(jTextFieldUsuario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 233, -1));

        jLabel40.setText("Usuario");
        jPanelGenerarUser1.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jButtonOKjdialogUser1.setText("OK");
        jButtonOKjdialogUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKjdialogUser1ActionPerformed(evt);
            }
        });
        jPanelGenerarUser1.add(jButtonOKjdialogUser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 503, 70, 20));

        jButtonCancelarJdialogUser1.setText("Cancelar");
        jButtonCancelarJdialogUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarJdialogUser1ActionPerformed(evt);
            }
        });
        jPanelGenerarUser1.add(jButtonCancelarJdialogUser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 500, -1, -1));

        jLabel21.setText("Ingrese la contraseña actual:");
        jPanelGenerarUser1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        jLabel22.setText("Repita la contraseña nueva:");
        jPanelGenerarUser1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        jLabel23.setText("<html>GUARDE SU CONTRASEÑA Y USUARIO DONDE NO LO OLVIDE NI DONDE SEA ACCSESIBLE A NADIE. <br> SOLO UD. PUEDE ACCEDER A ELLA Y NO HAY MANERA DE RECUPERARLA EN CASO DE PERDIDA.<br>  LA EMPRESA NO SE RESPONSABILIZA POR LA PERDIDA DE ESTA.<br> AL GENERAR ESTE USUARIO, UD ENTIENDE QUE SE SOLICITARA EN LUGAR DE SU FIRMA Y POR ENDE,<br> TIENE EL VALOR DE  SU CONSENTIMIENTO PARA EL ALCANCE DE ESTE SISTEMA Y<br> SERA UTILIZADO PARA REGISTRAR SU APROBACION EN CADA PROCESO EN QUE<br> SE REQUIERA GUARDAR LA CONSTANCIA DE SU  CONTROL/AUTORIZACION </html>");
        jPanelGenerarUser1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 470, 170));

        jPasswordFieldActual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPasswordFieldActualMouseClicked(evt);
            }
        });
        jPasswordFieldActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldActualActionPerformed(evt);
            }
        });
        jPanelGenerarUser1.add(jPasswordFieldActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 230, -1));

        jPasswordFieldNueva2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldNueva2ActionPerformed(evt);
            }
        });
        jPanelGenerarUser1.add(jPasswordFieldNueva2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 230, 20));

        jLabel24.setText("Ingrese la nueva contraseña:");
        jPanelGenerarUser1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jPasswordFieldNueva1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldNueva1ActionPerformed(evt);
            }
        });
        jPanelGenerarUser1.add(jPasswordFieldNueva1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 230, 20));

        javax.swing.GroupLayout jDialogModificarUserLayout = new javax.swing.GroupLayout(jDialogModificarUser.getContentPane());
        jDialogModificarUser.getContentPane().setLayout(jDialogModificarUserLayout);
        jDialogModificarUserLayout.setHorizontalGroup(
            jDialogModificarUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelGenerarUser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
        jDialogModificarUserLayout.setVerticalGroup(
            jDialogModificarUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelGenerarUser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
        );

        jPanel21.setBackground(java.awt.Color.white);
        jPanel21.setMaximumSize(new java.awt.Dimension(344, 32767));
        jPanel21.setMinimumSize(new java.awt.Dimension(344, 588));
        jPanel21.setName(""); // NOI18N

        tablaBuscador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaBuscador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaBuscadorMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(tablaBuscador);

        jTexfieldBuscador.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTexfieldBuscadorCaretUpdate(evt);
            }
        });
        jTexfieldBuscador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTexfieldBuscadorMouseClicked(evt);
            }
        });
        jTexfieldBuscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTexfieldBuscadorActionPerformed(evt);
            }
        });
        jTexfieldBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTexfieldBuscadorKeyTyped(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel41.setText("Buscar empleado");

        jButtonCrearNuevo.setBackground(new java.awt.Color(255, 255, 255));
        jButtonCrearNuevo.setText("Crear Nuevo");
        jButtonCrearNuevo.setEnabled(false);
        jButtonCrearNuevo.setPreferredSize(new java.awt.Dimension(137, 40));
        jButtonCrearNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCrearNuevoMouseClicked(evt);
            }
        });
        jButtonCrearNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearNuevoActionPerformed(evt);
            }
        });

        jButtonEliminarEmpleado.setBackground(new java.awt.Color(255, 255, 255));
        jButtonEliminarEmpleado.setText("Eliminar");
        jButtonEliminarEmpleado.setMaximumSize(new java.awt.Dimension(133, 39));
        jButtonEliminarEmpleado.setMinimumSize(new java.awt.Dimension(133, 39));
        jButtonEliminarEmpleado.setPreferredSize(new java.awt.Dimension(133, 39));
        jButtonEliminarEmpleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEliminarEmpleadoMouseClicked(evt);
            }
        });
        jButtonEliminarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarEmpleadoActionPerformed(evt);
            }
        });

        jTextField_ReferenciaCalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ReferenciaCallesActionPerformed(evt);
            }
        });

        jComboBox_TipoContacto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CELULAR", "CORREO", "RED SOCIAL" }));
        jComboBox_TipoContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_TipoContactoActionPerformed(evt);
            }
        });

        jTextFieldContacto.setEnabled(false);
        jTextFieldContacto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldContactoKeyTyped(evt);
            }
        });

        jLabel7.setText("Codigo Postal");

        jButtonCrearUser.setText("Crear Usuarios");
        jButtonCrearUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearUserActionPerformed(evt);
            }
        });

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "contacto 1", "correo 2", "telefono 3", "red social 1 4", "Red social 2  5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jLabel9.setText("Nacionalidad");

        jTextField_nombreApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_nombreApellidoActionPerformed(evt);
            }
        });

        jTextField_dni.setEnabled(false);
        jTextField_dni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_dniActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre y Apellido");

        jLabel2.setText("Tipo Documento");

        jLabel3.setText("Numero");

        jLabel11.setText("Referencia");

        jCombo_Naciones1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCombo_Naciones1ItemStateChanged(evt);
            }
        });
        jCombo_Naciones1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCombo_Naciones1ActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonGuardarMain.setText("Guardar");
        jButtonGuardarMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarMainActionPerformed(evt);
            }
        });

        jLabel5.setText("Provincia");

        jComboBox_Provincias.setEnabled(false);
        jComboBox_Provincias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_ProvinciasItemStateChanged(evt);
            }
        });

        jLabel12.setText("Ciudad");

        jComboBox_Ciudades.setEnabled(false);
        jComboBox_Ciudades.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_CiudadesItemStateChanged(evt);
            }
        });

        jLabel13.setText("Barrio");

        jComboBox_Barrios.setEnabled(false);
        jComboBox_Barrios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_BarriosItemStateChanged(evt);
            }
        });

        jLabel4.setText("Direccion");

        jComboBox_tipoDni.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "DNI", "CUIT", "CI POLICIA FEDERAL", "LC", "LE", "PASAPORTE", " " }));
        jComboBox_tipoDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_tipoDniActionPerformed(evt);
            }
        });

        jButtonAñadirNacion.setText("+");
        jButtonAñadirNacion.setEnabled(false);
        jButtonAñadirNacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirNacionActionPerformed(evt);
            }
        });

        jButtonAñadirProvincia.setText("+");
        jButtonAñadirProvincia.setEnabled(false);
        jButtonAñadirProvincia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirProvinciaActionPerformed(evt);
            }
        });

        jButtonAñadirCiudad.setText("+");
        jButtonAñadirCiudad.setEnabled(false);
        jButtonAñadirCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirCiudadActionPerformed(evt);
            }
        });

        jButtonAñadirBarrio.setText("+");
        jButtonAñadirBarrio.setEnabled(false);
        jButtonAñadirBarrio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirBarrioActionPerformed(evt);
            }
        });

        jButtonAñadirContacto.setText("+");
        jButtonAñadirContacto.setEnabled(false);
        jButtonAñadirContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirContactoActionPerformed(evt);
            }
        });

        jLabel8.setText("Estado Civil");

        jComboBox_calles.setEnabled(false);
        jComboBox_calles.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_callesItemStateChanged(evt);
            }
        });

        jButtonAñadirCalle.setText("+");
        jButtonAñadirCalle.setEnabled(false);
        jButtonAñadirCalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirCalleActionPerformed(evt);
            }
        });

        jTable_tipoYcontacto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Contacto"
            }
        ));
        jTable_tipoYcontacto.setEnabled(false);
        jTable_tipoYcontacto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_tipoYcontactoMouseClicked(evt);
            }
        });
        jTable_tipoYcontacto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_tipoYcontactoKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_tipoYcontacto);

        jLabel10.setText("Categoria");

        jLabel14.setText("Convenio");

        jLabel16.setText("Aporte Obra Social");

        jLabel15.setText("CUIL");

        jButton_eliminarContacto.setText("-");
        jButton_eliminarContacto.setEnabled(false);
        jButton_eliminarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarContactoActionPerformed(evt);
            }
        });

        jLabel18.setText("Numero");

        jTextField_nroCasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_nroCasaActionPerformed(evt);
            }
        });

        jTextFieldCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCategoriaActionPerformed(evt);
            }
        });

        jTextFieldAporteOSocial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAporteOSocialActionPerformed(evt);
            }
        });

        jLabel17.setText("Fecha de Nacimiento:");

        jButtonCancelarMain.setText("Cancelar");
        jButtonCancelarMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarMainActionPerformed(evt);
            }
        });

        jComboBox_estadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "CASADO", "DIVORCIADO", "SOLTERO" }));
        jComboBox_estadoCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_estadoCivilActionPerformed(evt);
            }
        });

        jLabel25.setText("Tipo:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(jTextFieldAporteOSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField_cuil, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel14))
                                .addGap(79, 79, 79)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldCategoria, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonCrearUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                                    .addComponent(jTextFieldConvenio))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox_TipoContacto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jComboBox_calles, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButtonAñadirCalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jTextFieldContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButtonAñadirContacto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jComboBox_Ciudades, 0, 271, Short.MAX_VALUE)
                                                .addComponent(jComboBox_Barrios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jButtonAñadirCiudad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonAñadirBarrio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jComboBox_Provincias, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jCombo_Naciones1, javax.swing.GroupLayout.Alignment.LEADING, 0, 271, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(6, 6, 6)
                                                    .addComponent(jButtonAñadirProvincia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jButtonAñadirNacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton_eliminarContacto, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField_ReferenciaCalles, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel18)))
                                .addComponent(jTextField_nombreApellido))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jTextField_nroCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jComboBox_tipoDni, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(280, 280, 280)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7)
                                                    .addComponent(jLabel8)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField_dni, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(71, 71, 71)
                                                .addComponent(jComboBox_estadoCivil, 0, 126, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextField_CodigoPostal, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(132, 132, 132)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel25))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldTipo)
                    .addComponent(jDateChooserFN, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButtonCancelarMain, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonGuardarMain, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_nombreApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox_tipoDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox_Provincias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonAñadirProvincia))
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCombo_Naciones1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonAñadirNacion)
                                .addComponent(jLabel8)
                                .addComponent(jComboBox_estadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jTextField_CodigoPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox_Ciudades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAñadirCiudad)
                        .addComponent(jLabel18))
                    .addComponent(jTextField_nroCasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox_Barrios, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAñadirBarrio)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox_calles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAñadirCalle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_ReferenciaCalles, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox_TipoContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAñadirContacto)
                            .addComponent(jButton_eliminarContacto)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCrearUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextFieldCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jTextFieldConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16)
                            .addComponent(jTextFieldAporteOSocial, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jTextField_cuil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCancelarMain, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonGuardarMain, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTextFieldAporteOSocial, jTextFieldCategoria, jTextFieldConvenio, jTextField_cuil});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTextField_dni, jTextField_nombreApellido});

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel41))
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jTexfieldBuscador, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonEliminarEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonCrearNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE))
                        .addGap(18, 18, 18)))
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jTexfieldBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jButtonEliminarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCrearNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_eliminarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarContactoActionPerformed
        // TODO add your handling code here:
        int pos = jTable_tipoYcontacto.getSelectedRow();
        if (pos != -1) {
            DefaultTableModel model = (DefaultTableModel) jTable_tipoYcontacto.getModel();
            model.removeRow(pos);
        }

    }//GEN-LAST:event_jButton_eliminarContactoActionPerformed

    private void jButtonAñadirCalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirCalleActionPerformed
        // TODO add your handling code here:
        jDialogAñadirElemento.setTitle("Añadir una nueva calle/manzana");
        jDialogAñadirElemento.setVisible(true);
        jDialogAñadirElemento.setModal(true);
        jDialogAñadirElemento.setLocationRelativeTo(this);
        jDialogAñadirElemento.setSize(400,221);
        
    }//GEN-LAST:event_jButtonAñadirCalleActionPerformed

    private void jButtonAñadirContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirContactoActionPerformed
        // TODO add your handling code here:
        String text = jTextFieldContacto.getText();
        boolean check = false;
        String aviso = "Debe llenar el campo de contacto para agregarlo.";
        if(String.valueOf(jComboBox_TipoContacto.getSelectedItem()).equals("CELULAR")){
            if(Statics.Funciones.onlyNumbers(text, false)){
                check = true;
            }else{
                aviso = "Debe colocar un numero de telefono válido.";
            }
        }else{
            if(String.valueOf(jComboBox_TipoContacto.getSelectedItem()).equals("CORREO")){
                if(Statics.Funciones.isEmail(text, false)){
                    check = true;
                }else{
                    aviso = "El email no tiene un formato válido.";
                }
            }else{
                if(String.valueOf(jComboBox_TipoContacto.getSelectedItem()).equals("RED SOCIAL")){   
                    if(Statics.Funciones.controlText(text)){
                        check = true;
                    }
                }
            }
        }
        if(check){
            DefaultTableModel model = (DefaultTableModel) jTable_tipoYcontacto.getModel();
            Object[] nuevo = new Object[2];
            nuevo[0] = String.valueOf(jComboBox_TipoContacto.getSelectedItem());
            nuevo[1] = jTextFieldContacto.getText();
            model.addRow(nuevo);
        }else{
            JOptionPane.showMessageDialog(null, aviso, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jButtonAñadirContactoActionPerformed

    private void jButtonAñadirBarrioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirBarrioActionPerformed
        jDialogAñadirElemento.setTitle("Añadir un nuevo barrio");
        jDialogAñadirElemento.setVisible(true);
        jDialogAñadirElemento.setModal(true);
        jDialogAñadirElemento.setLocationRelativeTo(this);
        jDialogAñadirElemento.setSize(400, 221);
        

        //llama al controller de esto
    }//GEN-LAST:event_jButtonAñadirBarrioActionPerformed

    private void jButtonAñadirCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirCiudadActionPerformed
        jDialogAñadirElemento.setTitle("Añadir una nueva ciudad");
        jDialogAñadirElemento.setVisible(true);
        jDialogAñadirElemento.setModal(true);
        jDialogAñadirElemento.setLocationRelativeTo(this);
        jDialogAñadirElemento.setSize(400, 221);
        

        //llama al controller de esto
    }//GEN-LAST:event_jButtonAñadirCiudadActionPerformed

    private void jButtonAñadirProvinciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirProvinciaActionPerformed
        jDialogAñadirElemento.setTitle("Añadir una nueva provincia");
        jDialogAñadirElemento.setVisible(true);
        jDialogAñadirElemento.setModal(true);
        jDialogAñadirElemento.setLocationRelativeTo(this);
        jDialogAñadirElemento.setSize(400, 221);
        

        //llama al controller de esto
    }//GEN-LAST:event_jButtonAñadirProvinciaActionPerformed

    private void jButtonAñadirNacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirNacionActionPerformed
        jDialogAñadirElemento.setTitle("Añadir una nueva nacionalidad");
        jDialogAñadirElemento.setVisible(true);
        jDialogAñadirElemento.setModal(true);
        jDialogAñadirElemento.setLocationRelativeTo(this);
        jDialogAñadirElemento.setSize(400, 221);
       

        //llama al controller de esto
    }//GEN-LAST:event_jButtonAñadirNacionActionPerformed

    private void jComboBox_tipoDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_tipoDniActionPerformed
        // TODO add your handling code here:
        jTextField_dni.setEnabled(true);

    }//GEN-LAST:event_jComboBox_tipoDniActionPerformed

    private void jButtonGuardarMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarMainActionPerformed
        // TODO add your handling code here:
        //control de todos los campos
        if(!Funciones.controlText(jTextField_nombreApellido.getText())){
            JOptionPane.showMessageDialog(null,"El nombre del empleado no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!Funciones.isNumeric(jTextField_dni.getText())){
             JOptionPane.showMessageDialog(null,"Debe ingresar un valor documento valido","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(Funciones.compareStrings("-",String.valueOf(jComboBox_tipoDni.getSelectedItem()))){
            JOptionPane.showMessageDialog(null,"Debe ingresar un tipo de dni ","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextField_dni.getText().isEmpty()){
             JOptionPane.showMessageDialog(null,"Debe ingresar un documento","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(Funciones.compareStrings("-",String.valueOf(jComboBox_calles.getSelectedItem()))){
            JOptionPane.showMessageDialog(null,"Debe ingresar una direccion","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(Funciones.compareStrings("-",String.valueOf(jComboBox_estadoCivil.getSelectedItem()))){
            JOptionPane.showMessageDialog(null,"Debe ingresar un tipo de estado civil","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!Funciones.isNumeric(jTextField_nroCasa.getText())){
            JOptionPane.showMessageDialog(null,"Debe ingresar un numero de casa","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        DefaultTableModel model= (DefaultTableModel) jTable_tipoYcontacto.getModel();
        if(model.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "Debe colocar al menos un contacto", "Error", JOptionPane.ERROR_MESSAGE);
        }
         empleadoSelected.setNombre(jTextField_nombreApellido.getText().toUpperCase());
      
       
        int selectedIndex = jComboBox_tipoDni.getSelectedIndex();
        empleadoSelected.setTipoDni(String.valueOf(jComboBox_tipoDni.getItemAt(selectedIndex)));
        empleadoSelected.setDni(Integer.parseInt(jTextField_dni.getText()));
        empleadoSelected.setFechaNacimiento(jDateChooserFN.getDate());
        int estadoSelected= jComboBox_estadoCivil.getSelectedIndex();
        if(String.valueOf(jComboBox_estadoCivil.getItemAt(estadoSelected)).equals("-")){
            JOptionPane.showMessageDialog(null, "Debe colocar el estado civil", "Error", JOptionPane.ERROR_MESSAGE);
        }
        empleadoSelected.setEstadoCivil(String.valueOf(jComboBox_estadoCivil.getItemAt(estadoSelected)));
        
        // informacion social 
        empleadoSelected.setCategoria(jTextFieldCategoria.getText().toUpperCase());
        empleadoSelected.setConvenio(jTextFieldConvenio.getText().toUpperCase());
        empleadoSelected.setAporteOSocial(jTextFieldAporteOSocial.getText().toUpperCase());
        empleadoSelected.setCuil(jTextField_cuil.getText());
        empleadoSelected.setTipo(jTextFieldTipo.getText().toUpperCase());
       //direccion
       
        empleadoSelected.setNacionalidad(String.valueOf(jCombo_Naciones1.getSelectedItem()));
        empleadoSelected.setProvincia(String.valueOf(jComboBox_Provincias.getSelectedItem()));
        empleadoSelected.setCiudad(String.valueOf(jComboBox_Ciudades.getSelectedItem()));
        empleadoSelected.setBarrio(String.valueOf(jComboBox_Barrios.getSelectedItem()));
        empleadoSelected.setDireccion(String.valueOf(jComboBox_calles.getSelectedItem()));
        empleadoSelected.setDireccionId(direccion_selected.getId());
        empleadoSelected.setNro(jTextField_nroCasa.getText());
        empleadoSelected.setCodigoPostal(jTextField_CodigoPostal.getText());
        empleadoSelected.setReferencia(jTextField_ReferenciaCalles.getText());

            
        // Contactos
        List<Contacto> list = new ArrayList<Contacto>();
        for(int i = 0 ; i < model.getRowCount() ; i++){
            Contacto c = new Contacto();
            c.setContacto(String.valueOf(model.getValueAt(i, 1)));
            c.setTipo(String.valueOf(model.getValueAt(i, 0)));
            list.add(c);
        }
        empleadoSelected.setContacto((ArrayList<Contacto>) list);
        if (!modificarTrue && !altaUsuarioOk){
            //no estoy modificando y no agregue el usuario y contraseña
            JOptionPane.showMessageDialog(null, "Debe agregar un usuario y contraseña para crear un empleado nuevo", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if(modificarTrue){
            //estoy modificando
            int res= JOptionPane.showInternalConfirmDialog(null,"Esta seguro que desea modificar el empleado : \n- "+jTextField_nombreApellido.getText(), "MODIFICAR", JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE);
            if(res== JOptionPane.OK_OPTION){
                if(empleadosDAO.actualizarEmpleado(empleadoSelected)){
                    principal.lbl_estado.setText("El empleado se actualizo con exito");
                    principal.lbl_estado.setForeground(new Color(0,100,0));
                    limpiarCampos();
                    habilitarCampos(false);
                    empleadoSelected=null;
                }
                else {
                    principal.lbl_estado.setText("Hubo un error al actualizar el empleado");
                    principal.lbl_estado.setForeground(new Color(139,0,0));
                }
            }
        }
        else{
            //estoy creado uno nuevo
            int result = JOptionPane.showConfirmDialog(null, "Esta seguro que desea agregar el empleado: \n- "+jTextField_nombreApellido.getText(),"AGREGAR",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE);
            if(result == JOptionPane.OK_OPTION){
                if(empleadosDAO.guardarEmpleado(empleadoSelected)){
                    System.out.println("tuve exito");
                    principal.lbl_estado.setText("El empleado se agrego con exito");
                    principal.lbl_estado.setForeground(new Color(0,100,0));
                    limpiarCampos();
                    habilitarCampos(false);
                    empleadoSelected=null;
                }else{
                    principal.lbl_estado.setText("Hubo un error al agregar el empleado");
                    principal.lbl_estado.setForeground(new Color(139,0,0));
                }
            }
            jTexfieldBuscador.setText("");
            cambioBusqueda("", jTexfieldBuscador,tablaBuscador);
            long l = 3000;
            ScheduledExecutorService service = Executors.newSingleThreadScheduledExecutor();
            Runnable task1 = () -> principal.lbl_estado.setText("");
            service.scheduleAtFixedRate(task1, 1, 7, TimeUnit.SECONDS);
        }
        
    }//GEN-LAST:event_jButtonGuardarMainActionPerformed

    private void jTextField_dniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_dniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_dniActionPerformed

    private void jTextField_nombreApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_nombreApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_nombreApellidoActionPerformed

    private void jButtonCrearUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearUserActionPerformed
        // TODO add your handling code here:
        if(modificarTrue){
            //jDialogModificarUser.setTitle("MODIFICACION DE CONTRASEÑA");
            //jDialogModificarUser.setVisible(true);
            //jDialogModificarUser.setModal(true);
            //jDialogModificarUser.setLocationRelativeTo(this);
            //jDialogModificarUser.setSize(542,559);
            JOptionPane.showMessageDialog(null, "Ud no puede modificar el usuario y/o clave de otro empleado", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else {
            jDialogGenerarUser.setTitle("GENERACION DE USUARIO Y CONTRASEÑA");
            jDialogGenerarUser.setVisible(true);
            jDialogGenerarUser.setModal(true);
            jDialogGenerarUser.setLocationRelativeTo(this);
            jDialogGenerarUser.setSize(520,480);
        }
    }//GEN-LAST:event_jButtonCrearUserActionPerformed

    private void jTextField_ReferenciaCallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ReferenciaCallesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ReferenciaCallesActionPerformed

    private void jTable_tipoYcontactoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_tipoYcontactoMouseClicked
        // TODO add your handling code here:
        jButton_eliminarContacto.setEnabled(true);
    }//GEN-LAST:event_jTable_tipoYcontactoMouseClicked

    private void jTable_tipoYcontactoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_tipoYcontactoKeyPressed
        // TODO add your handling code here:
        jButton_eliminarContacto.setEnabled(true);
    }//GEN-LAST:event_jTable_tipoYcontactoKeyPressed

    private void jCombo_Naciones1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCombo_Naciones1ItemStateChanged
       if(jCombo_Naciones1.getItemCount() == 0){return;}
        
       System.out.println("La cantidad de naciones es: "+jCombo_Naciones1.getItemCount());
       
        Pais p = (Pais) jCombo_Naciones1.getSelectedItem();
        Pais_selected = p;
        jComboBox_Provincias.removeAllItems();
        try{
                direcciones.getPais_Provincia().get(p.getId()).forEach((t) -> {
                jComboBox_Provincias.addItem(t);
            });
            jComboBox_Provincias.setSelectedIndex(0);
            jComboBox_Provincias.setEnabled(true);
        }catch(NullPointerException e){
            new Statics.ExceptionManager().saveDump(e, "", false);
        }
    }//GEN-LAST:event_jCombo_Naciones1ItemStateChanged

    private void jComboBox_ProvinciasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_ProvinciasItemStateChanged
        if(jComboBox_Provincias.getItemCount() == 0)
            return;
        Provincia p = (Provincia) jComboBox_Provincias.getSelectedItem();
        Provincia_selected = p;
        p.getId();
        jComboBox_Ciudades.removeAllItems();
        try{
            direcciones.getProvincia_Localidad().get(p.getId()).forEach((t) -> {
                jComboBox_Ciudades.addItem(t);
            });
            jComboBox_Ciudades.setEnabled(true);
           // jComboBox_Ciudades.setSelectedIndex(0);
        }catch(NullPointerException e){
            new Statics.ExceptionManager().saveDump(e, "", false);
        }
    }//GEN-LAST:event_jComboBox_ProvinciasItemStateChanged

    private void jComboBox_CiudadesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_CiudadesItemStateChanged
        if(jComboBox_Ciudades.getItemCount() == 0)
            return;
        Localidad l = (Localidad) jComboBox_Ciudades.getSelectedItem();
        Localidad_selected = l;
        jComboBox_Barrios.removeAllItems();
        try{
            direcciones.getLocalidad_Barrio().get(l.getId()).forEach((t) -> {
                jComboBox_Barrios.addItem(t);
            });
            jComboBox_Barrios.setEnabled(true);
            //jComboBox_Ciudades.setSelectedIndex(0);
        }catch(NullPointerException e){
            new Statics.ExceptionManager().saveDump(e, "", false);
        }
    }//GEN-LAST:event_jComboBox_CiudadesItemStateChanged

    private void jComboBox_BarriosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_BarriosItemStateChanged
        if(jComboBox_Barrios.getItemCount() == 0)
            return;
        Barrio b = (Barrio) jComboBox_Barrios.getSelectedItem();
        Barrio_selected = b;
        jComboBox_calles.removeAllItems();
        try{
                direcciones.getBarrio_direccion().get(b.getId()).forEach((t) -> {
                jComboBox_calles.addItem(t);
            });
            //
            jComboBox_calles.setEnabled(true);
            jComboBox_calles.setSelectedIndex(0);
        }catch(NullPointerException e){
            new Statics.ExceptionManager().saveDump(e, "", false);
        }
    }//GEN-LAST:event_jComboBox_BarriosItemStateChanged

    private void jComboBox_callesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_callesItemStateChanged
        if(jComboBox_calles.getItemCount() == 0)
            return;
        direccion_selected = (Direccion) jComboBox_calles.getSelectedItem();
    }//GEN-LAST:event_jComboBox_callesItemStateChanged

    private void jTextFieldContactoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldContactoKeyTyped
        if(jComboBox_TipoContacto.getSelectedItem().equals("Celular")){
            char c = evt.getKeyChar();
            if(c<'0' || c > '9'){
                evt.consume();
            }
        }
    }//GEN-LAST:event_jTextFieldContactoKeyTyped

    private void jTextFieldAporteOSocialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAporteOSocialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAporteOSocialActionPerformed

    private void jTextFieldCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCategoriaActionPerformed

    private void jTextField_nroCasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_nroCasaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_nroCasaActionPerformed

    private void tablaBuscadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaBuscadorMouseClicked
        int pos = tablaBuscador.getSelectedRow();
        if (pos != -1) {
            cargarDatosEmpleado(pos);
            jButtonEliminarEmpleado.setEnabled(true);
            jButtonModificar.setEnabled(true);
        }
    }//GEN-LAST:event_tablaBuscadorMouseClicked

    private void jTexfieldBuscadorCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTexfieldBuscadorCaretUpdate
        cambioBusqueda(jTexfieldBuscador.getText().toString(),jTexfieldBuscador,tablaBuscador);
    }//GEN-LAST:event_jTexfieldBuscadorCaretUpdate

    private void jTexfieldBuscadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTexfieldBuscadorKeyTyped

//        char c = evt.getKeyChar();
//        if (this.rbtn_proveedores_codigo.isSelected()) {
//            if ((c < '0' || c > '9')) {
//                evt.consume();
//            }
//        }
    }//GEN-LAST:event_jTexfieldBuscadorKeyTyped

    private void jButtonEliminarEmpleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEliminarEmpleadoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEliminarEmpleadoMouseClicked

    private void jButtonEliminarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarEmpleadoActionPerformed
        int result = JOptionPane.showConfirmDialog(null, "Esta seguro que desea eliminar el proveedor: \n"+empleadoSelected.getNombre(),"ELIMINAR",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE);
        if(result == JOptionPane.OK_OPTION){
            if(empleadosDAO.eliminarEmpleado(empleadoSelected) > 0){
                limpiarCampos();
                empleadoSelected = null;
                principal.lbl_estado.setText("El cliente se elimino con exito");
                principal.lbl_estado.setForeground(Color.GREEN);
                cambioBusqueda("",jTexfieldBuscador,tablaBuscador);
            }else{
                principal.lbl_estado.setText("Hubo un error al eliminar el cliente");
                principal.lbl_estado.setForeground(Color.RED);
            }
        }
    }//GEN-LAST:event_jButtonEliminarEmpleadoActionPerformed

    private void jTexfieldBuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTexfieldBuscadorActionPerformed
        jButtonCrearNuevo.setEnabled(true);
    }//GEN-LAST:event_jTexfieldBuscadorActionPerformed

    private void jButtonCrearNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearNuevoActionPerformed
        /*    String archivo = System.getProperty("user.dir") + System.getProperty("file.separator") + path + "src\\Reportes\\Listado_Productos.jasper";
        JasperReport reporte = null;

        try {
            reporte = (JasperReport) JRLoader.loadObjectFromFile(archivo);
        } catch (JRException ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }

        Map param = new HashMap();

        param.put("DIR_REPORT", System.getProperty("user.dir") + System.getProperty("file.separator") + path+ "src\\");
            JasperPrint jasperPrint = null;

            try {
                jasperPrint = JasperFillManager.fillReport(reporte, param, Main.conexion.conexion);
            } catch (JRException ex) {
                Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
            }

            JasperViewer jv = new JasperViewer(jasperPrint, false);
            jv.setTitle("Listado de Productos");
            jv.setVisible(true);*/
        
        jComboBox_Provincias.setEnabled(true);
        jComboBox_Ciudades.setEnabled(true);
        jComboBox_Barrios.setEnabled(true);
        jComboBox_calles.setEnabled(true);
        modificarTrue = false;
        //limpiarCampos();
        jButtonCrearUser.setForeground(Color.black);
        habilitarCampos(true);
        cargarNacionalidades();
        empleadoSelected = new Empleado();
        
        
        
    }//GEN-LAST:event_jButtonCrearNuevoActionPerformed

    private void jButtonCrearNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCrearNuevoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCrearNuevoMouseClicked

    private void jComboBox_TipoContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_TipoContactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_TipoContactoActionPerformed

    private void jTextF_IngresarNuevoElementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextF_IngresarNuevoElementoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextF_IngresarNuevoElementoActionPerformed

    private void jButtonOKjdialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKjdialogActionPerformed
          
        String texto = jTextF_IngresarNuevoElemento.getText().toLowerCase();
        switch(jDialogAñadirElemento.getTitle()){
            case "Añadir una nueva nacionalidad":{
                System.out.println("Entre a añadir nacionalidad");
                Provincia p = direccionesDAO.añadirNacionalidad(texto);
                Pais pais = new Pais();
                pais.setId(p.getId_pais());
                pais.setNombre(texto);
                //actualizo mapa
                direcciones = direccionesDAO.getMapa();
                //actualizo cbox
                
                jCombo_Naciones1.addItem(pais);
                jCombo_Naciones1.setSelectedItem(pais);
                
                jTextF_IngresarNuevoElemento.setText("");
                jDialogAñadirElemento.dispose();
               
                break;
            }
            case "Añadir una nueva provincia":{
                System.out.println("Entre a añadir provincia con pais_SelectedId= "+Pais_selected.getId()+"  cuyo nombre: "+Pais_selected.getNombre());
                Localidad l = direccionesDAO.añadirProvincia(texto,Pais_selected.getId());
                Provincia p = new Provincia();
                p.setId(l.getId_provincia());
                p.setNombre(texto);
                p.setId_pais(Pais_selected.getId());
                //actualizo mapa
              
                direcciones = direccionesDAO.getMapa();
                //actualizo cbox
                jComboBox_Provincias.addItem(p);
                jComboBox_Provincias.setSelectedItem(p);
                jComboBox_Ciudades.removeAllItems();
                jComboBox_Ciudades.addItem(l);
                jTextF_IngresarNuevoElemento.setText("");
                jDialogAñadirElemento.dispose();
                break;
            }
            case "Añadir una nueva ciudad":{
                Barrio b = direccionesDAO.añadirCiudad(texto,Provincia_selected.getId());
                Localidad l = new Localidad();
                l.setId(b.getId_localidad());
                l.setNombre(texto);
                l.setId_provincia(Provincia_selected.getId());
                //actualizo mapa
                //Set<Barrio> barrios = new TreeSet<>(new barrioCompare());
                //barrios.add(b);
                //direcciones.getLocalidad_Barrio().put(l.getId(), barrios);
                 direcciones = direccionesDAO.getMapa();
                //actualizo cbox
                jComboBox_Ciudades.addItem(l);
                jComboBox_Ciudades.setSelectedItem(l); //las dos siguientes lineas pueden ser innecesarias
                jComboBox_Barrios.removeAllItems();
                jComboBox_Barrios.addItem(b);
                jTextF_IngresarNuevoElemento.setText("");
                jDialogAñadirElemento.dispose();
                break;
            }
            case "Añadir un nuevo barrio":{
                Direccion d = direccionesDAO.añadirBarrio(texto,Localidad_selected.getId());
                Barrio b = new Barrio();
                b.setId(d.getId_barrio());
                b.setId_localidad(Localidad_selected.getId());
                b.setNombre(texto);
                //actualizo mapa
                //Set<Direccion> directs = new TreeSet<>(new direccionCompare());
                //directs.add(d);
                //direcciones.getBarrio_direccion().put(d.getId(), directs);
                 direcciones = direccionesDAO.getMapa();
                //actualizo cbox
                jComboBox_Barrios.addItem(b);
                jComboBox_Barrios.setSelectedItem(b);
                jComboBox_calles.removeAllItems();
                jComboBox_calles.addItem(d);
                jTextF_IngresarNuevoElemento.setText("");
                jDialogAñadirElemento.dispose();
                break;
            }
            case "Añadir una nueva calle/manzana":{
                int id = direccionesDAO.añadirDireccion(texto,Barrio_selected.getId());
                Direccion d = new Direccion();
                d.setId(id);
                d.setId_barrio(Barrio_selected.getId());
                d.setNombre(texto);
                direcciones.getBarrio_direccion().get(Barrio_selected.getId());
                //actualizo cbox
                jComboBox_calles.addItem(d);
                jComboBox_calles.setSelectedItem(d);
                jTextF_IngresarNuevoElemento.setText("");
                jDialogAñadirElemento.dispose();
                break;
            }
        }
        //direcciones = direccionesDAO.getMapa();
        jDialogAñadirElemento.dispose();
    }//GEN-LAST:event_jButtonOKjdialogActionPerformed

    private void jButtonCancelarJdialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarJdialogActionPerformed
        jTextF_IngresarNuevoElemento.setText("");
        jDialogAñadirElemento.dispose();
    }//GEN-LAST:event_jButtonCancelarJdialogActionPerformed

    private void jComboBox_estadoCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_estadoCivilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_estadoCivilActionPerformed

    private void jButtonCancelarMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarMainActionPerformed
        // TODO add your handling code here:
        empleadoSelected = null;
        jButtonCrearUser.setForeground(Color.black);
        limpiarCampos();
        habilitarCampos(false);
    }//GEN-LAST:event_jButtonCancelarMainActionPerformed

    private void jTextFieldUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUsuarioActionPerformed

    private void jButtonOKjdialogUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKjdialogUserActionPerformed

        //char[] cad2 = {'a', 'a', 'a'};
        
        
          if(jTextFieldUsuario.getText().isEmpty()){
              
            //JOptionPane.showMessageDialog(jDialogGenerarUser.getRootPane(), "Error, ingrese un usuario y sin espacios por favor! Ej: juanPerez1", "Erorr", JOptionPane.ERROR_MESSAGE);
            jLabelAdvertencia.setText("Error, ingrese un usuario y sin espacios por favor!");
            
            return;
        }
        try {
            
            if(!empleadosDAO.verificarUsaurioOk(jTextFieldUsuario.getText())){
                //JOptionPane.showMessageDialog(this.getRootPane(), "Error, el usuario que desea ingresar ya existe", "Error", JOptionPane.ERROR_MESSAGE);
                jLabelAdvertencia.setText("Error, el usuario que desea ingresar ya existe");
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(AltaUsuariosView.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(jPasswordFieldCrear1.getPassword().length<1){
            //JOptionPane.showMessageDialog(this.getRootPane(), "Error, ingrese una clave", "Erorr", JOptionPane.ERROR_MESSAGE);
            jLabelAdvertencia.setText("Error, ingrese una clave");
            return;
            
        }
        if(jPasswordFieldCrear2.getPassword().length<1){
            //JOptionPane.showMessageDialog(this.getRootPane(), "Error, repita su clave ", "Erorr", JOptionPane.ERROR_MESSAGE);
            jLabelAdvertencia.setText("Error, repita su clave");
            return;
            
        }
        
        
        char[] cadena1 = jPasswordFieldCrear1.getPassword();
        char[] cadena2 =jPasswordFieldCrear2.getPassword();
        ///char[] cad2 = {'a', 'a', 'a'};
        
        
        if(!Arrays.equals(cadena1, cadena2)){
            //no match!!.
                
                //JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden. Intente nuevamente", "Error", JOptionPane.ERROR_MESSAGE);
                jLabelAdvertencia.setText("Las contraseñas no coinciden. Intente nuevamente");
                jPasswordFieldCrear1.setText("");
                jPasswordFieldCrear2.setText("");
                System.out.println("Las cadenas no son iguales");
                System.out.println("Usuario: "+jTextFieldUsuario.getText());
                return;
                //System.out.println("Contraseña1 "+String.valueOf(cadenaNueva1)+" contra 2 = "+String.valueOf(cadenaNueva2));
                
                
    
        }
        if(Arrays.equals(cadena1, cadena2)){
          //  JOptionPane.showMessageDialog( jDialogGenerarUser.getOwner(), "Se genero el usuario con exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
           
            System.out.println("Ta todo bien");
            empleadoSelected.setPass(String.valueOf(cadena1));
            empleadoSelected.setUser(jTextFieldUsuario.getText());
            altaUsuarioOk=true;
            jTextFieldUsuario.setText("");
            jTextFieldUsuario.setEditable(false);
            jPasswordFieldCrear1.setEditable(false);
            jPasswordFieldCrear1.setText("");
            
            jPasswordFieldCrear2.setText("");
             jPasswordFieldCrear2.setEditable(false);
            jButtonCrearUser.setForeground(Color.green);
            jButtonCrearUser.setEnabled(false);
            jLabelAdvertencia.setText("");
            //jLabelAdvertencia.setText("El usuario "+empleadoSelected.getUser()+" ha sido generado con exito");
            
           
            
             
               
        }
        
        //jPanel1.requestFocus();
        //jPanel1.setVisible(true);
        //jPanel1.setEnabled(true);
         //jDialogGenerarUser.getOwner();
        //jDialogGenerarUser.toBack();
        //jDialogGenerarUser.transferFocusBackward();
        System.out.println("llego al final");
       
        //jDialogGenerarUser.getOwner().toFront();
        //jDialogGenerarUser.getOwner().setEnabled(true);
         //jDialogGenerarUser.getOwner().toFront();
          //jDialogGenerarUser.getOwner().setVisible(true);
        
         jDialogGenerarUser.dispose();
         
        
        
    }//GEN-LAST:event_jButtonOKjdialogUserActionPerformed

    private void jButtonCancelarJdialogUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarJdialogUserActionPerformed
        // TODO add your handling code here:
        jTextFieldUsuario.setText("");
        jPasswordFieldCrear1.setText("");
        jPasswordFieldCrear2.setText("");
        jDialogGenerarUser.dispose();
    }//GEN-LAST:event_jButtonCancelarJdialogUserActionPerformed

    private void jPasswordFieldCrear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldCrear1ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jPasswordFieldCrear1ActionPerformed

    private void jTextFieldUsuario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsuario1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUsuario1ActionPerformed

    private void jButtonOKjdialogUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKjdialogUser1ActionPerformed
        if(jTextFieldUsuario1.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error, ingrese un usuario y sin espacios por favor! Ej: juanPerez1", "Erorr", JOptionPane.ERROR_MESSAGE);
        }
        try {
            
            if(!empleadosDAO.verificarUsaurioOk(jTextFieldUsuario1.getText())){
                JOptionPane.showMessageDialog(null, "Error, el usuario que desea ingresar ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AltaUsuariosView.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(jPasswordFieldActual.getPassword().length<1){
            JOptionPane.showMessageDialog(null, "Error, ingrese su clave actual", "Erorr", JOptionPane.ERROR_MESSAGE);
            
        }
        if(jPasswordFieldNueva1.getPassword().length<1){
            JOptionPane.showMessageDialog(null, "Error, ingrese su clave nueva", "Erorr", JOptionPane.ERROR_MESSAGE);
            
        }
        if(jPasswordFieldNueva2.getPassword().length<1){
            JOptionPane.showMessageDialog(null, "Error, no repitio el ingreso de la nueva clave", "Erorr", JOptionPane.ERROR_MESSAGE);
            
        }
        
        char[] cadenaActual = jPasswordFieldActual.getPassword();
        //char[] cadena1 = jPasswordFieldCrear1.getPassword();
        ///jPasswordFieldCrear2 = new javax.swing.JPasswordField();
        char[] cadenaNueva1 =jPasswordFieldNueva1.getPassword();
        char[] cadenaNueva2 = jPasswordFieldNueva2.getPassword();
        ///char[] cad2 = {'a', 'a', 'a'};
        
        
        if(!Arrays.equals(cadenaNueva1, cadenaNueva2)){
            //no match!!.
            
                JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden. Intente nuevamente", "Error", JOptionPane.ERROR_MESSAGE);
                jPasswordFieldCrear1.setText("");
                jPasswordFieldCrear2.setText("");
                System.out.println("Las cadenas no son iguales");
                System.out.println("Usuario: "+jTextFieldUsuario.getText());
                System.out.println("Contraseña1 "+String.valueOf(cadenaNueva1)+" contra 2 = "+String.valueOf(cadenaNueva2));
                
    
        }
        if(Arrays.equals(cadenaNueva1, cadenaNueva2)){
            //match!!
                if(Arrays.equals(cadenaActual, cadenaNueva1)){
                    JOptionPane.showMessageDialog(null, "Esta ingresado una contraseña nueva igual a la anterior", "Error", JOptionPane.ERROR_MESSAGE);
                }
                else{
                    boolean verificacion=empleadosDAO.verificarModificacionContraseña(cadenaActual,cadenaNueva1,jTextFieldUsuario1.getText() );
                    if(verificacion){
                        JOptionPane.showMessageDialog(null, "Se genero el usuario con exito", "Exito", JOptionPane.ERROR_MESSAGE);
                        //System.out.println("Usuario: "+jTextFieldUsuario.getText());
                        //System.out.println("Contraseña1 "+String.valueOf(cadena1)+" contra 2 = "+String.valueOf(cadena2));
                        altaUsuarioOk=true;
                        jTextFieldUsuario.setText("");
                        jPasswordFieldCrear1.setText("");
                        jPasswordFieldCrear2.setText("");
                        jDialogGenerarUser.dispose();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error, no se pudo validar la clave y/o Usuario actual y no se ha modificado la contraseña", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                
                }
               
        }
    }//GEN-LAST:event_jButtonOKjdialogUser1ActionPerformed

    private void jButtonCancelarJdialogUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarJdialogUser1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCancelarJdialogUser1ActionPerformed

    private void jPasswordFieldActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldActualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldActualActionPerformed

    private void jPasswordFieldNueva2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldNueva2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldNueva2ActionPerformed

    private void jPasswordFieldNueva1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldNueva1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldNueva1ActionPerformed

    private void jPasswordFieldActualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordFieldActualMouseClicked
        try {
            // TODO add your handling code here:
            if(!empleadosDAO.verificarUsaurioOk(jTextFieldUsuario1.getText())){
                JOptionPane.showMessageDialog(null, "Error, el usuario que desea ingresar ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AltaUsuariosView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jPasswordFieldActualMouseClicked

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODO add your handling code here:
         if(empleadoSelected!= null){
             modificarTrue=true;
             habilitarCampos(true);
             cargarNacionalidades();
         }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jTexfieldBuscadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTexfieldBuscadorMouseClicked
        // TODO add your handling code here:
        jButtonCrearNuevo.setEnabled(true);
    }//GEN-LAST:event_jTexfieldBuscadorMouseClicked

    private void jCombo_Naciones1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCombo_Naciones1ActionPerformed
        // TODO add your handling code here:
         //jComboBox_Provincias.setEnabled(true);
    }//GEN-LAST:event_jCombo_Naciones1ActionPerformed

            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAñadirBarrio;
    private javax.swing.JButton jButtonAñadirCalle;
    private javax.swing.JButton jButtonAñadirCiudad;
    private javax.swing.JButton jButtonAñadirContacto;
    private javax.swing.JButton jButtonAñadirNacion;
    private javax.swing.JButton jButtonAñadirProvincia;
    private javax.swing.JButton jButtonCancelarJdialog;
    private javax.swing.JButton jButtonCancelarJdialogUser;
    private javax.swing.JButton jButtonCancelarJdialogUser1;
    private javax.swing.JButton jButtonCancelarMain;
    private javax.swing.JButton jButtonCrearNuevo;
    private javax.swing.JButton jButtonCrearUser;
    private javax.swing.JButton jButtonEliminarEmpleado;
    private javax.swing.JButton jButtonGuardarMain;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonOKjdialog;
    private javax.swing.JButton jButtonOKjdialogUser;
    private javax.swing.JButton jButtonOKjdialogUser1;
    private javax.swing.JButton jButton_eliminarContacto;
    private javax.swing.JComboBox<Models.Barrio> jComboBox_Barrios;
    private javax.swing.JComboBox<Models.Localidad> jComboBox_Ciudades;
    private javax.swing.JComboBox<Models.Provincia> jComboBox_Provincias;
    private javax.swing.JComboBox<String> jComboBox_TipoContacto;
    private javax.swing.JComboBox<Models.Direccion> jComboBox_calles;
    private javax.swing.JComboBox<String> jComboBox_estadoCivil;
    private javax.swing.JComboBox<String> jComboBox_tipoDni;
    private javax.swing.JComboBox<Models.Pais> jCombo_Naciones1;
    private com.toedter.calendar.JDateChooser jDateChooserFN;
    private javax.swing.JDialog jDialogAñadirElemento;
    private javax.swing.JDialog jDialogGenerarUser;
    private javax.swing.JDialog jDialogModificarUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAdvertencia;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanelGenerarUser;
    private javax.swing.JPanel jPanelGenerarUser1;
    private javax.swing.JPasswordField jPasswordFieldActual;
    private javax.swing.JPasswordField jPasswordFieldCrear1;
    private javax.swing.JPasswordField jPasswordFieldCrear2;
    private javax.swing.JPasswordField jPasswordFieldNueva1;
    private javax.swing.JPasswordField jPasswordFieldNueva2;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_tipoYcontacto;
    protected javax.swing.JTextField jTexfieldBuscador;
    private javax.swing.JTextField jTextF_IngresarNuevoElemento;
    private javax.swing.JTextField jTextFieldAporteOSocial;
    private javax.swing.JTextField jTextFieldCategoria;
    private javax.swing.JTextField jTextFieldContacto;
    private javax.swing.JTextField jTextFieldConvenio;
    private javax.swing.JTextField jTextFieldTipo;
    private javax.swing.JTextField jTextFieldUsuario;
    private javax.swing.JTextField jTextFieldUsuario1;
    private javax.swing.JTextField jTextField_CodigoPostal;
    private javax.swing.JTextField jTextField_ReferenciaCalles;
    private javax.swing.JTextField jTextField_cuil;
    private javax.swing.JTextField jTextField_dni;
    private javax.swing.JTextField jTextField_nombreApellido;
    private javax.swing.JTextField jTextField_nroCasa;
    private javax.swing.JTable tablaBuscador;
    // End of variables declaration//GEN-END:variables
    public void cambioBusqueda(String txt,JTextField buscador, JTable tablaBuscador){
            if(txt.isEmpty()){
               cargarTablaBusqueda(empleadosDAO.buscarEmpleado("","nombre"),tablaBuscador); 
            }else{
                try{
                    cargarTablaBusqueda(empleadosDAO.buscarEmpleado(txt.toLowerCase(),"nombre"),tablaBuscador);
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null,"Debe ingresar un nombre",
                            "Error",JOptionPane.ERROR_MESSAGE);
                            buscador.setText("");
                }
            }
            }
    
    public void cargarTablaBusqueda(List<Empleado> emp, JTable tablaBuscador){
        listaEmpleados = emp;
        DefaultTableModel model = (DefaultTableModel) tablaBuscador.getModel();
        model.setNumRows(0);
         try {
            Object[] obj = new Object[2];
            for (int i = 0; i < listaEmpleados.size(); i++) {
                obj[0] = listaEmpleados.get(i).getDni();
                obj[1] = listaEmpleados.get(i).getNombre();
                model.addRow(obj);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    public void cargarDatosEmpleado(int pos){
        if (pos!=-1){
            empleadoSelected = listaEmpleados.get(pos);
            jTextField_nombreApellido.setText(empleadoSelected.getNombre());
            jComboBox_tipoDni.setSelectedItem(String.valueOf(empleadoSelected.getTipoDni().toUpperCase()));
            jTextField_dni.setText(String.valueOf(empleadoSelected.getDni()));
            Date fechaN= null;
            fechaN = empleadoSelected.getFechaNacimiento();
            jDateChooserFN.setDate(fechaN);
            // dudoso
            jComboBox_estadoCivil.setSelectedItem(String.valueOf(empleadoSelected.getEstadoCivil().toUpperCase()));
            //jComboBoxGenero.setSelectedItem(String.valueOf(empleadoSelected.getGenero()).toUpperCase());
            // informacion social
            jTextFieldConvenio.setText(empleadoSelected.getConvenio());
            jTextFieldCategoria.setText(empleadoSelected.getCategoria());
            jTextFieldAporteOSocial.setText(empleadoSelected.getAporteOSocial());
            jTextField_cuil.setText(empleadoSelected.getCuil());
            // contacto
            jTextFieldContacto.setText("");
            DefaultTableModel model= (DefaultTableModel) jTable_tipoYcontacto.getModel();
            model.setNumRows(0);
            empleadoSelected.getContacto().forEach((t) -> {
                Object[] obj =new Object [2];
                obj[0]= t.getTipo();
                obj[1]= t.getContacto();
                model.addRow(obj);
            });
            
            //Direccion
            jCombo_Naciones1.removeAllItems();
            jCombo_Naciones1.addItem(new Pais(empleadoSelected.getNacionalidad()));
            jComboBox_Provincias.removeAllItems();
            jComboBox_Provincias.addItem(new Provincia(empleadoSelected.getProvincia()));
            jComboBox_Ciudades.removeAllItems();
            jComboBox_Ciudades.addItem(new Localidad(empleadoSelected.getCiudad()));
            jComboBox_Barrios.removeAllItems();
            jComboBox_Barrios.addItem(new Barrio (empleadoSelected.getBarrio()));
            jComboBox_calles.removeAllItems();
            jComboBox_calles.addItem(new Direccion(empleadoSelected.getDireccion()));
            
            jTextField_nroCasa.setText(empleadoSelected.getNro());
            jTextField_CodigoPostal.setText(empleadoSelected.getCodigoPostal());
            jTextField_ReferenciaCalles.setText(empleadoSelected.getReferencia());
            jTextFieldTipo.setText(empleadoSelected.getTipo());
            
            
        }
    }
    private void cargarNacionalidades() {
       jCombo_Naciones1.removeAllItems();
       direcciones.getPaises().values().forEach((t) ->{
       jCombo_Naciones1.addItem(t);
       
       });
    }

    private void habilitarCampos(boolean flag) {
        jTexfieldBuscador.setEnabled(!flag);
        jTextField_dni.setEnabled(flag);
        jTextField_nombreApellido.setEnabled(flag);
        jComboBox_tipoDni.setEnabled(flag);
        jComboBox_estadoCivil.setEnabled(flag);
        jDateChooserFN.setEnabled(flag);
        
        // informacion de contacto:
        jTextFieldContacto.setEnabled(true);
        jComboBox_TipoContacto.setEnabled(flag);
        jButton_eliminarContacto.setEnabled(flag);
        jButtonAñadirContacto.setEnabled(flag);
        
        //jComboBoxGenero.setEnabled(flag);
        // informacion social:
        jTextFieldAporteOSocial.setEnabled(flag);
        jTextFieldCategoria.setEnabled(flag);
        jTextFieldConvenio.setEnabled(flag);
        jTextField_cuil.setEnabled(flag);
        jTextFieldTipo.setEnabled(flag);
        
        // informacion direccion
        jCombo_Naciones1.setEnabled(flag);
        jComboBox_Provincias.setEnabled(flag);
        jComboBox_Ciudades.setEnabled(flag);
        jComboBox_Barrios.setEnabled(flag);
        jComboBox_calles.setEnabled(flag);
        jButtonAñadirNacion.setEnabled(flag);
        jButtonAñadirProvincia.setEnabled(flag);
        jButtonAñadirCiudad.setEnabled(flag);
        jButtonAñadirBarrio.setEnabled(flag);
        jButtonAñadirCalle.setEnabled(flag);
        jTextField_nroCasa.setEnabled(flag);
        jTextField_ReferenciaCalles.setEnabled(flag);
        jTextField_CodigoPostal.setEnabled(flag);
        
        //Mucho cuidado con este, debo hacer algo que solo permita crear usuarios si se registro el actual
        jButtonCrearUser.setEnabled(flag);
        // Panel buscador botones
        jButtonEliminarEmpleado.setEnabled(!flag);
        jButtonGuardarMain.setVisible(flag);
        jButtonModificar.setEnabled(!flag);
        jButtonCrearNuevo.setEnabled(!flag);
        tablaBuscador.setEnabled(!flag);
        
        
    }
    
    public void limpiarCampos(){
        jTexfieldBuscador.setText("");
        jTextField_dni.setText("");
        jTextField_nombreApellido.setText("");
        //String [] items = {"-", "DNI","CI POLICIA FEDERAL","LC","LE","PASAPORTE"};
        jComboBox_tipoDni.setSelectedIndex(0);
        
        jComboBox_estadoCivil.setSelectedIndex(0);
        jDateChooserFN.setDate(new Date());
        //jComboBoxGenero.setEnabled(flag);
        // informacion social:
        jTextFieldAporteOSocial.setText("");
        jTextFieldCategoria.setText("");
        jTextFieldConvenio.setText("");
        jTextField_cuil.setText("");
        jTextFieldTipo.setText("");
        // informacion direccion
        
        jCombo_Naciones1.setSelectedIndex(0);
        jComboBox_Provincias.setSelectedIndex(0);
        jComboBox_Ciudades.setSelectedIndex(0);
        jComboBox_Barrios.removeAllItems();
        
        jComboBox_Barrios.addItem(new Barrio ("-"));
        jComboBox_calles.removeAllItems();
        jComboBox_calles.addItem(new Direccion("-"));
        
        jTextField_nroCasa.setText("");
        jTextField_ReferenciaCalles.setText("");
        jTextField_CodigoPostal.setText("");
        
        //informacion contaco
        jTextFieldContacto.setText("");
        DefaultTableModel model = (DefaultTableModel) jTable_tipoYcontacto.getModel();
        model.setNumRows(0);
        jComboBox_TipoContacto.setSelectedIndex(0);
    }
    
}
